■訪問者のアクセスログを収集したい

どんな人がどんな時間帯に自分のページを訪れたのか、興味はありませんか？
IISやPWSは自分自身でアクセスを監視し、ログを生成する機能を持っていますが、よりカスタマイズされた情報を得るためには、やはり自分でログ機能を作るのが一番です。
ここでは、日単位で、そのサイトにアクセスしてきた人の「アクセスしたページ」「送信データ量」「アクセスしてきたマシンのIPアドレス」「アクセス時間」を記録してみることにします。

●ポイント
　通常、ログ収集の機能はサイトの各ページに実装しなければ意味がありません。
　しかし、同じ内容を各ページに記述するのは無駄というものです。そこで、P.21でも使用したSSI（Server Sifde Include）のしくみを利用して、外部ファイル化したスクリプト部分を各ページに挿入することにします。

●サンプル
□logX.asp
1	<%@Language="VBScript" %>
2	<html>
3	<head>
4	<title>アクセスログの収集</title>
5	</head>
6	<body>
7	<!-- #INCLUDE File="log.asp" -->
#　SSIを利用して、インクルードファイルlog.aspの内容をこの部分に挿入します。
8	<%
9	WriteLog
#　WriteLogは、log.aspの中に記述されたSubプロシージャで、アクセス情報時の諸々の情報をログファイルに書きこみます。
10	ReadLog "log0318.log"
#　ReadLogは、log.aspの中に記述されたSubプロシージャで、指定されたログファイルを開き、記録内容を一覧表示します。
#　なお、Subプロシージャを呼び出す場合には、引数をカッコで囲むことはできませんので、注意してください。
11	%>
12	</body>
13	</html>

●TIPS
△AppendLogメソッドの活用
　Webサーバがあらかじめ提供しているログを利用するならば、一からこうしたしくみを構築するのではなく、AppendToLogメソッドを利用するのもひとつの手です。AppendToLogメソッドは、以下のように、既存ログの末尾に指定した文字列（ただし、80バイト以下）を記録します。
<%
On Error Resume Next
Response.hahhahha
#　hahhahhaは、Responseオブジェクトがサポートしていないメソッドなので、エラーが発生します。
Response.AppendToLog err.description
#　ここでは上で発生したエラーの詳細情報がIIS/PWSログに追加書きこみされます。
%>
